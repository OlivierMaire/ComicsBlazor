@inject Services.BlobManagerService BlobManagerService;
@inject Services.ComicService ComicService;
@using ComicsBlazor.Components
@using Microsoft.AspNetCore.Components.Web

<div class="comics-blazor-view @ComicService.Settings.ThemeClass">
    <SidePanel />
    <div class="flex-grow-1 main-view">

        <Progress />
        <Title />
        <PageView />

    </div>

    @if (DisplaySettings)
    {
        <Settings />
    }
</div>



<HeadContent>
    <link href="_content/ComicsBlazor/default.css" rel="stylesheet" />
</HeadContent>



@code {

    [Parameter] public string Url { get; set; } = string.Empty;
    [Parameter] public string? Name { get; set; } = string.Empty;
    [Parameter] public ComicMetadata Metadata { get; set; } = null!;
    [Parameter] public Func<int, Task<PageData?>> GetPage { get; set; } = null!;

    [Parameter] public Action<string>? SaveBookmark { get; set; } = null;


    private bool DisplaySettings { get; set; } = false;

    private string BlobUrl = string.Empty;

    protected override void OnInitialized()
    {
        ComicService.GetPage = GetPage;
        ComicService.SaveBookmark = SaveBookmark;
        ComicService.ThemeChanged += () => StateHasChanged();
        ComicService.ToggleSettings += () => { DisplaySettings = !DisplaySettings;StateHasChanged();};
        ComicService.Init(Metadata);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ComicService.InitSettings();
            await ComicService.InitInteropAsync();
            ComicService.CurrentPage = Metadata.LastReadPosition ?? 0;
            if (ComicService.CurrentPage == 0)
            {
                // need to force the rendering
                await ComicService.LoadAtPosition();
            }
        }
    }



}